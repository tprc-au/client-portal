import requests

# ── CONFIG ──────────────────────────────────────────────────────────────
ACCESS_TOKEN = 'pat-ap1-ecc3d8df-7cac-44d4-835e-6aae34436f91'
APPLICANT_OBJECT_TYPE = "2-184526441"   # Schema ID for Applicant custom object
APPLICANT_ID = "112095802834"           # Example Applicant record ID
HEADERS = {
    "Authorization": f"Bearer {ACCESS_TOKEN}",
    "Content-Type": "application/json"
}

# ── STEP 1: Get Applicant object ─────────────────────────────────────────
def get_applicant(applicant_id):
    url = f"https://api.hubapi.com/crm/v3/objects/{APPLICANT_OBJECT_TYPE}/{applicant_id}"
    r = requests.get(url, headers=HEADERS, timeout=10)
    r.raise_for_status()
    return r.json()

# ── STEP 2: Get associated Contact IDs ──────────────────────────────────
def get_associated_contacts(applicant_id):
    url = f"https://api.hubapi.com/crm/v3/objects/{APPLICANT_OBJECT_TYPE}/{applicant_id}/associations/contacts"
    r = requests.get(url, headers=HEADERS, timeout=10)
    r.raise_for_status()
    data = r.json()
    return [assoc["id"] for assoc in data.get("results", [])]

# ── STEP 3: Fetch Contact details ───────────────────────────────────────
def get_contact(contact_id):
    props = "firstname,lastname,email,city,country"
    url = f"https://api.hubapi.com/crm/v3/objects/contacts/{contact_id}?properties={props}"
    r = requests.get(url, headers=HEADERS, timeout=10)
    r.raise_for_status()
    return r.json()

# ── MAIN ────────────────────────────────────────────────────────────────
if __name__ == "__main__":
    try:
        applicant = get_applicant(APPLICANT_ID)
        print("Applicant Properties:", applicant.get("properties", {}))

        contact_ids = get_associated_contacts(APPLICANT_ID)
        print("\nAssociated Contacts Found:", contact_ids)

        for cid in contact_ids:
            contact = get_contact(cid)
            props = contact.get("properties", {})
            print(f"\nContact {cid}:")
            print("  Name   :", f"{props.get('firstname', '')} {props.get('lastname', '')}")
            print("  Email  :", props.get("email"))
            print("  City   :", props.get("city"))
            print("  Country:", props.get("country"))

    except requests.HTTPError as e:
        print("❌ API Error:", e.response.text)
    except Exception as ex:
        print("❌ Unexpected Error:", str(ex))
